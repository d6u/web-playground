{
  "name": "web-playground",
  "version": "0.4.0",
  "description": "WebPlayground bootstraps simple HTML, JS, CSS files and setup live-reloading server for you.",
  "author": "Daiwei Lu <daiweilu123@gmail.com> (http://daiwei.lu)",
  "license": "MIT",
  "keywords": [
    "HTML",
    "JavaScript",
    "CSS",
    "playground"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d6u/web-playground.git"
  },
  "bugs": {
    "url": "https://github.com/d6u/web-playground/issues"
  },
  "homepage": "https://github.com/d6u/web-playground#readme",
  "engines": {
    "node": ">= 4"
  },
  "main": "./lib/index.js",
  "bin": {
    "wpg": "./lib/bin/wpg.js"
  },
  "files": [
    "lib",
    "assets"
  ],
  "dependencies": {
    "autoprefixer": "^6.2.3",
    "babel-core": "6.4.0",
    "babel-loader": "^6.2.1",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.3.13",
    "bluebird": "^3.1.1",
    "browser-sync": "^2.10.1",
    "chalk": "^1.1.1",
    "chokidar": "^1.4.2",
    "co": "^4.6.0",
    "commander": "^2.9.0",
    "ejs": "^2.3.4",
    "has-require": "^1.2.1",
    "js-yaml": "^3.4.6",
    "koa": "^1.1.2",
    "koa-route": "^2.4.2",
    "memory-fs": "^0.3.0",
    "mz": "^2.1.0",
    "node-sass": "^3.4.2",
    "portscanner": "^1.0.0",
    "postcss": "^5.0.13",
    "ramda": "~0.19.0",
    "resolve": "^1.1.6",
    "rx": "^4.0.7",
    "webpack": "^1.12.10"
  },
  "devDependencies": {
    "babel-cli": "6.4.0",
    "babel-preset-es2015-node4": "^2.0.2",
    "codecov.io": "^0.1.6",
    "eslint": "^1.10.3",
    "expect": "^1.13.4",
    "isparta": "^4.0.0",
    "mocha": "^2.3.4",
    "proxyquire": "^1.7.3",
    "rimraf": "^2.5.0"
  },
  "scripts": {
    "lint": "eslint src",
    "test": "mocha --require babel-core/register",
    "coverage": "babel-node node_modules/isparta/bin/isparta cover node_modules/mocha/bin/_mocha",
    "upload-coverage": "cat ./coverage/coverage-final.json | ./node_modules/codecov.io/bin/codecov.io.js",
    "check": "npm run lint && npm run coverage && npm run upload-coverage",
    "clean": "rimraf lib",
    "build": "npm run clean && babel src --out-dir lib",
    "watch": "babel src --out-dir lib --watch",
    "prepublish": "npm run clean && npm run build",
    "preversion": "npm run check",
    "postversion": "git push && git push --tags"
  }
}
